//***********************************************************************************************
// SysML classes of SysML elements that we selected to be imported and tracked in DOORS database
// Author name: Amal Ahmed Anda
//***********************************************************************************************
model SysMLModel{ 
 folder SysML{

	// Requirement diagrams
	module requirementsDiagram{
		// Default name, id, description attributes are already provided.
		class requirementsDiagram{
			diagram "graphFileName"	shows as "Diagram File Name"	
			string "title" shows as	"Diagram Title"
		}
	}

	module requirement{
		// Default name, id, description are already provided,
		// and the description could contain the Text string.
		class requirement{ 
			string "ReqID" shows as "ReqID"
		}
	}
	
	// SysML relationships involving requirements
	module requirementlink{
		fileName "Requirements Relationships"
			 
		class requirementlink{				
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"
			
			association derAsso1 : derivedFrom to  "requirement"."requirement" "source ID"
			association derAsso2 : derivedFrom to  "requirement"."requirement" "destination ID"
		}
			
		class requirementToBlock{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"
				
			association SatisfyAsso1 : satisfiedBy to  "requirement"."requirement" "source ID"
			association SatisfyAsso2 : satisfiedBy to  "block"."block" "destination ID"			
		}	
			
		class subrequirement{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"	
				
			association contAsso1 : containedBy to "requirement"."requirement" "source ID"
			association contAsso2 : containedBy to "requirement"."requirement" "destination ID" 			
		}

		class requirementToDiagram{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"	
				
			association contAsso1 : containedBy to "requirement"."requirement" "source ID"
			association contAsso2 : containedBy to "requirementsDiagram"."requirementsDiagram" "destination ID"
		}
	}

	// Block definition diagrams
	module blockDefinitionDiagram{
		// Default name, id, description attributes are already provided. 
		// The description could contain the documentation of the block at design time.
		class blockDefinitionDiagram{
			diagram "graphFileName"	shows as "Diagram File Name"	
			string "title" shows as	"Diagram Title"
		}
	}
	
	module block{
		class block {
			string "Type" shows as "block Type"
		}
	}

	// Additional SysML relationships involving blocks only
	module blocklink{
		fileName "Block Relationships"
			
		class blocklink{				
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"
						
			association Asso3 : refersTo to  "block"."block" "source ID"
			association Asso4 : refersTo to  "block"."block" "destination ID"
		}
			
		class blockparts{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"	
				
			association CompAsso1 : partOf to  "block"."block" "source ID"
			association CompAsso2 : partOf to  "block"."block" "destination ID"			
		}
			
		class blockToDiagram{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"	
				
			association CompAsso1 : containedBy to  "block"."block" "source ID"
			association CompAsso2 : containedBy to  "blockDefinitionDiagram"."blockDefinitionDiagram" "destination ID"
		}
			
		class Blockparent{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"	
				
			association GenAsso1 : childOf to  "block"."block" "source ID"
			association GenAsso2 : childOf to  "block"."block" "destination ID"			
		}
			
		class Blockaggregation{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"	
				
			association aggAsso1 : IsSharedBy to  "block"."block" "source ID"
			association aggAsso2 : IsSharedBy to  "block"."block" "destination ID"			
		}	
			
		class BlockDependency{
			string "sourceID" shows as "Source ID"
			string "destinationID" shows as "Destination ID"	
				
			association DepAsso1 : Dependency to  "block"."block" "source ID"
			association DepAsso2 : Dependency to  "block"."block" "destination ID"			
		}
	}
		
	// Association types
	associationType derivedFrom "Derive"
	associationType satisfiedBy "Satisfy"
	associationType partOf  "Composition"
	associationType IsSharedBy "Aggregation"
	associationType Dependency "Dependency"
	associationType refersTo  "Association"
	associationType childOf  "Generalization"
	associationType containedBy "ContainedBy"
 } 
}

