/*
 * generated by Xtext
 */
package org.xtext.dsl.dxl.validation

import org.eclipse.xtext.validation.Check;
import org.xtext.dsl.dxl.dxlDsl.Association;
import org.xtext.dsl.dxl.dxlDsl.Class;
import org.xtext.dsl.dxl.dxlDsl.Folder;
import org.xtext.dsl.dxl.dxlDsl.Module;


/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class DxlDslValidator extends AbstractDxlDslValidator {

//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}


//	@Check
//	public void checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.getName().charAt(0))) {
//			warning("Name should start with a capital", MyDslPackage.Literals.GREETING__NAME);
//		}
//	}
	

	@Check
	def checkAssociation(Association association) {
		moduleFound = false;
		boolean classFound = false;
		String moduleName = association.getModuleType();
		String className = association.getClassType();
		boolean haveClass = (className != null) && (className.length() > 0);
		
		Folder f =(Folder)((Module) (((Class)association.eContainer()).eContainer())).eContainer();
		
		for (Module m:f.getModule()){
			if (m.getName().equals(moduleName)){
				moduleFound = true;
				if (haveClass){
					for(Class c:m.getClasses()){
						if(c.getName().equals(className)){
							classFound = true;
							break;
						}
					}
				}
			}
			if (classFound){
				break;
			}
		}
		
		if (!moduleFound){
			error("Module not found!", org.xtext.dsl.dxl.dxlDsl.DxlDslPackage.Literals.ASSOCIATION__MODULE_TYPE);
			//warning("Module Not Found", org.xtext.dsl.dxl.dxlDsl.DxlDslPackage.Literals.ASSOCIATION__MODULE_TYPE);
		}else if (haveClass && !classFound){
			error("Class not found in Module!", org.xtext.dsl.dxl.dxlDsl.DxlDslPackage.Literals.ASSOCIATION__CLASS_TYPE);
			
		}
		
		//System.out.println   ("Module : " + moduleName + " className : " + className + " Folder : " + f );
		
	}
	

	/* 

	@Check
	public void checkAssociation(Association association) {
		boolean moduleFound = false;
		boolean classFound = false;
		String moduleName = association.getModuleType();
		String className = association.getClassType();
		boolean haveClass = (className != null) && (className.length() > 0);
		
		Folder f =(Folder)((Module) (((Class)association.eContainer()).eContainer())).eContainer();
		
		for (Module m:f.getModule()){
			if (m.getName().equals(moduleName)){
				moduleFound = true;
				if (haveClass){
					for(Class c:m.getClasses()){
						if(c.getName().equals(className)){
							classFound = true;
							break;
						}
					}
				}
			}
			if (classFound){
				break;
			}
		}
		
		if (!moduleFound){
			error("Module not found!", org.xtext.dsl.dxl.dxlDsl.DxlDslPackage.Literals.ASSOCIATION__MODULE_TYPE);
			//warning("Module Not Found", org.xtext.dsl.dxl.dxlDsl.DxlDslPackage.Literals.ASSOCIATION__MODULE_TYPE);
		}else if (haveClass && !classFound){
			error("Class not found in Module!", org.xtext.dsl.dxl.dxlDsl.DxlDslPackage.Literals.ASSOCIATION__CLASS_TYPE);
			
		}
		
		//System.out.println   ("Module : " + moduleName + " className : " + className + " Folder : " + f );
		
	}
	*/
	

}
