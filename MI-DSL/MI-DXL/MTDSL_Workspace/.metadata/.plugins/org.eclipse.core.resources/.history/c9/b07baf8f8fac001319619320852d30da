/**
 * generated by Xtext
 */
package org.xtext.dsl.dxl.validation;

import com.google.common.base.Objects;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Functions.Function0;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;
import org.xtext.dsl.dxl.dxlDsl.Association;
import org.xtext.dsl.dxl.dxlDsl.Folder;
import org.xtext.dsl.dxl.dxlDsl.Module;
import org.xtext.dsl.dxl.validation.AbstractDxlDslValidator;

/**
 * Custom validation rules.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
@SuppressWarnings("all")
public class DxlDslValidator extends AbstractDxlDslValidator {
  /* @Check
   */public void checkAssociation;
  
  private Procedure1<? super Association> boolean;
  
  private boolean classFound = false;
  
  private String moduleName /* Skipped initializer because of errors */;
  
  private String className /* Skipped initializer because of errors */;
  
  private boolean haveClass = new Function0<Boolean>() {
    public Boolean apply() {
      boolean _and = false;
      boolean _notEquals = (!Objects.equal(DxlDslValidator.this.className, null));
      if (!_notEquals) {
        _and = false;
      } else {
        int _length = DxlDslValidator.this.className.length();
        boolean _greaterThan = (_length > 0);
        _and = (_notEquals && _greaterThan);
      }
      return _and;
    }
  }.apply();
  
  private Folder f /* Skipped initializer because of errors */;
  
  private /* Procedure1<? super Function1<? super Module,? extends Procedure1<? super Procedure1<? super Function1<? super org.xtext.dsl.dxl.dxlDsl.Class,? extends association.eContainer>>>>> */Object eContainer;
  
  private Object eContainer;
  
  private Procedure1<? super Module> m;
}
