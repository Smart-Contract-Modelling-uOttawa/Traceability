/*************************************************************************************** 
// Author Anisur Rahman 2012
// - Automated version Based on initial version by Gunter Mussbacher, Bo Jiang
// - general assumptions
//	- UCM modules have been generated by URNImport
//	- the UCM folder has been created by URNImport
//	- the UCM folder contains only UCM modules
//	- no one alters the UCM modules except for adding links from UCM modules to 
//	  other modules or from other modules to UCM modules. these links are not to 
//	  be saved in the UCM link modules but have to be saved in different link modules.
//	- objects in the UCM modules are identified by their ID attribute
//	- the user has write access to the UCM folder and modules
//	- user has read access to the external module and write access to the external link module
//	- external modules have a fixed name (see constants) and reside in a fixed folder
//	  (the parent folder of the UCM folder)
//	- an object in the external link module must have an attribute (see constants) which indicates whether 
//	  the link was generated or created manually (if such an attribute does not exist, auto-completion of 
//	  links will stop), by default the attribute indicates that the link was created manually
//	  the attribute must not inherit value, affect the change bar, affect change dates, or generate history
// - assumptions for import of UCM file
//	- the dxl file generated by UCMNav is well-formed
//	  (in particular, all the IDs and IDRefs are correct and the order of commands is correct)
//	- links from an object in a UCM module to other modules will optionally be deleted
//	  by subsequent UCM imports if the object in the UCM module needs to be deleted.
//	  the object in the UCM module will also be deleted optionally
//	- links to an object in a UCM module from other modules will not be deleted
//	  by subsequent UCM imports even if the object in the UCM module needs to be deleted.
//	  in this case, the object in the UCM module will also not be deleted
//	- the import currently only sets up links to the external module above the UCM modules
// - assumptions for auto-completion of external links
//	- the external link module links UCM modules only to the external module and no other module per link direction
//	- since deleted objects have all their internal links removed, the auto-completion of links
//	  will not generate more links for such objects because they cannot be found in the link modules
// - assumptions for change report
//	- none
*/

// the DXL code assigned to the following two strings was the created by doing the following
//	- create column for information about objects with suspect IN/OUT-links (open and closed modules)
//	- convert this DXL column into a DXL attribute (Tools - Support Tools - Convert Layout...)
//	- copy and paste the created DXL code below (Edit - Attributes - <select DXL attribute> - Edit - Browse - Current)
//	- note that " needs to be escaped, \n and //- need to be added
/* these constants are currently not used because the new solution for "Report Changes" does not require DXL attributes anymore
   the constants are kept just in case they are needed again
	const string SUSPECT_IN_LINKS_ATTRIBUTE = //-
"pragma runLim, 0 \n //-
Buffer bsz = create \n //-
void endAttributeDXL() { \n //-
if (!null obj && attrDXLName != \"\") { obj.attrDXLName = richText tempStringOf(bsz) } \n //-
delete bsz } \n //-
void display(string s) { \n bsz += s \n bsz += \"\n\" } \n //-
void displayRich(string s) { \n bsz += s \n bsz += \"\n\" } \n //-
#include <layout/actual/suspect_in.inc> \n fnDisplaySuspectInLinks(true) \n //-
endAttributeDXL()"
	const string SUSPECT_OUT_LINKS_ATTRIBUTE = //-
"pragma runLim, 0 \n //-
Buffer bsz = create \n //-
void endAttributeDXL() { \n //-
if (!null obj && attrDXLName != \"\") { obj.attrDXLName = richText tempStringOf(bsz) } \n //-
delete bsz } \n //-
void display(string s) { \n bsz += s \n bsz += \"\n\" } \n //-
void displayRich(string s) { \n bsz += s \n bsz += \"\n\" } \n //-
#include <layout/actual/suspect_out.inc> \n fnDisplaySuspectOutLinks(true) \n //-
endAttributeDXL()"
*/

// all UCM link modules
// (Does Looks like these are used: Anisur - commenting out for now)
//Module hostsLinkModule
//Module requestsLinkModule
//Module referencesLinkModule
//Module refinesLinkModule
//Module boundtoLinkModule
//Module tracedByLinkModule
//Module linkRefLinkModule

//Module intentionalElementAssociationsModule

// all external modules
//Module externalModule
//Module externalLinkModule

//  whether external modules are ready (=2) or not (=0)
int externalOK = 2
// for removal of deleted objects (0=No, 1=No to all, 2=Yes, 3=Yes to all)
int removeDeletedMethod = 0
int countDeletedNotRemoved = 0

